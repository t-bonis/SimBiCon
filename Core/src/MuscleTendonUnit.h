#pragma once

//Hill-type muscle tendon unit
class MuscleTendonUnit
{
public:
	MuscleTendonUnit(double _fMax = 0, double _oLength = 0, double _sLength = 0);
	~MuscleTendonUnit();
	MuscleTendonUnit(const MuscleTendonUnit&) = default;

	//  total MTU force
	void calcForce();

	double active_force_length(double length) const;

	double passive_force_length(double length) const;

	double force_velocity(double velocity) const;

	//  compute the force that is actively generated by the muscle fibers
	double calcCEForce();

	//  compute the force that is passively generated by the muscle fibers
	double calcPEForce();

public:
	//initialized from file:
	//rbs file

	double optimalLength; // optimal fiber length (CE) (in m) : length at which active muscle force peaks
	double slackLength; // tendon slack length (SE) (in m) : the length at which the tendon begins to generate force
	//rs file
	double initActivation; //<! initial activation 
	double initExcitation; //<! initial excitation
	double fOut; // output force (in N)
	double fMax; // maximum (optimal) isometric force (in N) 

	// calculated at each step:

	double lCE; // current length (in m) of the CE = fiber length 
	double vCE; // current contraction velocity of the fiber (= of the CE)
	double activation; // muscle activation, in [0,1]


	// constants cf [Lee2014]


	static const double GAMMA; // shape factor for the active force - length relationship
	static const double E_0; // passive muscle strain due to max iso force
	static const double K_PE; // shape factor for the passive force - length relationship
	static const double A_F; // shape factor for the force - velocity relationship
	static const double N_V_MAX;
	// normalized maximum contraction velocity of the muscle fiber in optimal fiber lengths per second
	static const double N_F_LEN; // normalized maximum lengthening muscle force


};
